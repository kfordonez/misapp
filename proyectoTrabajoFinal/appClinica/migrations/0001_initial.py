# Generated by Django 3.1.2 on 2020-12-03 00:01

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('es_secretaria', models.BooleanField(default=False)),
                ('es_medico', models.BooleanField(default=False)),
                ('es_ventas', models.BooleanField(default=False)),
                ('es_taller', models.BooleanField(default=False)),
                ('es_gerencia', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Medico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreMedico', models.CharField(max_length=64)),
                ('apellidoMedico', models.CharField(max_length=64)),
                ('dniMedico', models.CharField(max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombrePaciente', models.CharField(max_length=64)),
                ('apellidoPaciente', models.CharField(max_length=64)),
                ('dniPaciente', models.CharField(max_length=64)),
                ('edad', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreProducto', models.CharField(max_length=64)),
                ('tipoProducto', models.CharField(choices=[('LENTES', 'Lentes'), ('GAFAS', 'Gafas')], max_length=64)),
                ('caract_lente_distancia', models.CharField(choices=[('LEJOS', 'Lejos'), ('CERCA', 'Cerca')], max_length=64, null=True)),
                ('caract_lente_direccion', models.CharField(choices=[('IZQUIERDA', 'Izquiera'), ('DERECHA', 'Derecha')], max_length=64, null=True)),
                ('armazon', models.BooleanField(default=False)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=7)),
            ],
        ),
        migrations.CreateModel(
            name='Vendedor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreVendedor', models.CharField(max_length=64)),
                ('apellidoVendedor', models.CharField(max_length=64)),
                ('dniVendedor', models.CharField(max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Turno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaTurno', models.DateField()),
                ('horaTurno', models.TimeField()),
                ('asistio', models.BooleanField(default=False)),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userMedicos', to='appClinica.medico')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='turno_paciente', to='appClinica.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaPedido', models.DateField(auto_now=True)),
                ('cantidad', models.IntegerField()),
                ('tipoPago', models.CharField(choices=[('TARJETA DE CREDITO', 'Tarjeta de Credito'), ('DEBITO', 'Debito'), ('BILLETERA VIRTUAL', 'Billetera Virtual'), ('EFECTIVO', 'Efectivo')], max_length=64)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('PEDIDO', 'Pedido'), ('TALLER', 'Taller'), ('FINALIZADO', 'Finalizado')], default='PENDIENTE', max_length=64)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedido_paciente', to='appClinica.paciente')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedido_producto', to='appClinica.producto')),
                ('vendedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pedido_vendedor', to='appClinica.vendedor')),
            ],
        ),
        migrations.CreateModel(
            name='HistorialMedico',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observaciones', models.TextField(max_length=200)),
                ('fecha_historial_medico', models.DateField(auto_now=True)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_paciente', to='appClinica.paciente')),
            ],
        ),
    ]
